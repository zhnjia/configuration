# -*- mode:shell-script; -*-
# ex: filetype=sh

# adb functions
usedevice () {
  current=$(echo $ANDROID_SERIAL)
  devices=$(adb devices -l | grep model | awk '{print $1,$5}')
  [[ -z "$devices" ]] && echo "no device connected" && return
  models=$(echo $devices | awk -F':' '{print $2}')
  echo $devices | awk -v selected=$current -F':' 'BEGIN { print "List of devices attached" } { format="  %d.  %s\n"; if (length(selected) > 0 && match($1, selected) == 1) {format="  %d. [%s]\n" }; printf(format,NR,$2) }'
  echo -n "which devices do you want? "
  read
  if [[ -z "$REPLY" ]];then
    return 0
  fi

  if [[ ! "$REPLY" =~ "[0-9]+" ]];then
    echo "  Not a digit!"
    return 1
  fi

  local serial=$(echo $devices | awk -v dev=$REPLY '{ if (NR == dev) {print $1}}')
  if [[ -z "$serial" ]];then
    echo "  Out of range!"
    return 2
  fi

  export ANDROID_SERIAL=$serial
  echo "  !!! Directs command to [$fg_bold[red]"$(echo $models | awk -v dev=$REPLY '{if (NR == dev) {print $1}}')"$reset_color] !!!"
}

adbfunc () {
    cmds=$(getopt -o e:g:s:cdt -- "$@")
    if [ $? -ne 0 ]; then return 1; fi
    eval set -- "$cmds"

    while true; do
        case $1 in
            -c)
                adb logcat -c
                return
                ;;
            -e)
                adb logcat -v time | egrep $2
                return
                ;;
            -s)
                adb logcat -v time -s $2
                return
                ;;
            -g)
                adb logcat -v time | grep $2
                return
                ;;
            -t)
                adb shell /data/data/tcpdump -p -vv -s 0 -i any -w /sdcard/capture.pcap
                return
                ;;
            -d)
                usedevice
                return
                ;;
            --)
                adb logcat -v time
                return
                ;;
        esac
    done
}
